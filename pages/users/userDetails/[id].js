import Link from "next/link";
import React from "react";
import Router from "next/router";
import Head from "next/head";
import prisma from "../../../lib/prisma.ts";
let moment = require('moment');



export async function getServerSideProps(context) {
  const { id } = context.params;
  const user = await prisma.user.findUnique({ where: { id: parseInt(id) } });
  return {
    props: {
      user: JSON.parse(JSON.stringify(user)),      
    },
  };
}

async function deleteUser(id) {
  await fetch(`/api/users/userDelete/${id}`, {
    method: "DELETE",
  });
  Router.push("/users");
}

export default function User(props) {
  const { user } = props;
  //const thecrat = new Date(user.createdAt);
  //const theup = new Date(user.updatedAt);

  return (
    <div className="flex flex-col min-h-screen">
      <Head>
        <title>{user.firstName} &nbsp; {user.lastName}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="main">
        <p>Name: {user.firstName} {user.lastName} &nbsp; ID: {user.id}</p>
        <p>Email: {user.email}</p>
        <p>Username: {user.username}</p>
        <p>Notes: {user.notes}</p>
        <p>Active: {user.active && "Yes"}</p>
        <p>Administrator: {user.isAdmin && "Yes"}</p>
        <p>Editor: {user.isEditor && "Yes"}</p>
        <p>Adder: {user.isAdder && "Yes"}</p>
        <p>Partner: {user.isPartner && "Yes"}</p>
        <p>Created: {user.createdAt && moment(user.createdAt).format("LLL")}</p>
        <p>Updated: {user.updatedAt && moment(user.updatedAt).format("LLL")}</p>
        
        <p></p>
        <div className="page-nav">
          <Link href={`/users/editUser/${user.id}`}>Edit</Link> - &nbsp;
          <Link href={`/users/changePassword/${user.id}`}>
            Change Password
          </Link>
          &nbsp; - &nbsp;
          <button
            className="delete button"
            onClick={() => {
              const confirmBox = window.confirm(
                "Do you really want to delete this Note?"
              );
              if (confirmBox === true) {
                deleteUser(user.id);
              }
            }}
          >
            Delete
          </button>
        </div>
      </main>
      <footer className="text-center font-bold text-xl">
        <b>Powered by John Dunnicliffe</b>
      </footer>
    </div>
  );
}
